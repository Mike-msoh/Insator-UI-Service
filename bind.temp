'''
#
# Bind
#
@app.route('/v2/service_instances/<instance_id>/service_bindings/<binding_id>', methods=['PUT'])
@basic_auth.required
def bind(instance_id, binding_id):
    # Bind an existing instance with the given org and space
    #
    # PUT /v2/service_instances/<instance_id>/service_bindings/<binding_id>:
    #     <instance_id> is the Cloud Controller provided
    #       value used to provision the instance
    #     <binding_id> is provided by the Cloud Controller
    #       and will be used for future unbind requests
    #
    # BODY:
    #     {
    #       "plan_id":           "<plan-guid>",
    #       "service_id":        "<service-guid>",
    #       "app_guid":          "<app-guid>"
    #     }
    #
    # return:
    #     JSON document with credentails and access details
    #     for the service based on this binding
    #     http://docs.cloudfoundry.org/services/binding-credentials.html

    if request.headers['Content-Type'] != 'application/json':
        abort(415, 'Unsupported Content-Type: expecting application/json')

    # get the JSON document in the BODY
    binding_details = request.get_json()
    print("Binding details: " , binding_details)
'''

     '''
     Bluemix returned binding info
     ('Binding details: ‘, 
        {
        u'plan_id': u'2c441056-a48a-40d4-931e-616de3bfcb8d’, 
        u'bind_resource’: 
                                {
                                  u'app_guid': u'26d8574e-7d90-4aa1-b0d7-b88e8ed2bc51’
                                }, 
        u'service_id': u'c45dcaa1-6dec-48ce-b6bc-b65cb96f437c’, 
        u'app_guid': u'26d8574e-7d90-4aa1-b0d7-b88e8ed2bc51’
       }
    )
     '''
     '''
    #TODO : 
    # Need to match the post headers and returned data in binding

    #Prepare for headers
    headers = {
                'name':"TEST_RP_name", 
                'appId':"https://samsung.com", 
                'id':”rp20161016-1”, 
                'createUserId':"createUserId"
              }
'''
'''
    #POST to Fido Admin to register client
    #
    try:
        fido_response = requests.post(url, json={"redirect_uris":["https:/api/v1/relyingparties"]}, headers=headers,timeout=(10.0,10.0))
        fido_response.raise_for_status()
    except requests.exceptions.ConnectionError as e:
        error_response['error'] = str(e.args[0])
        return make_response(error_response,500)  # TODO to define error code
    except requests.exceptions.ConnectTimeout as e:
        error_response['error'] = 'Connection Timeout ' 
        return make_response(error_response,500)  # TODO to define error code
    except requests.exceptions.HTTPError as e:
        error_response['error'] = str(e.args[0])
        return make_response(error_response,500)  # TODO to define error code
     

    #Request Failed
    if fido_response.status_code != 201:
        error_response['error'] = 'fido registration failed. am error =  ' + str(fido_response.status_code)
        return make_response(error_response,500)  # TODO to define error code

    #Request Succeeded
    if openam_response.status_code == 201:
        fido_result = fido_response.json()
        #load credentials
        credentials['credentials']['username'] = fido_result['id']
        credentials['credentials']['apiKey'] = fido_result['apiKey']
        return make_response(credentials,201) # TODO to define error code
    else:
        return make_response('{unknown}',500) # TODO to define error code

    '''


    ''' 
    The returned result from Samsung Fido in success :

    {
    "createUserId": "createUserId",
    "status": "ENABLED",
    "statusMessage": "success",
    "apiKey": "2ce0195c-8d02-49fe-86c9-02e75c994f80", 
    "name": "adminapi20161847",
    "id": "80b3af09-f901-4886-946c-c21c274a1dcc", 
    "statusCode": "1200"
    }

    '''


        #  Bluemix returned binding info
    #  ('Binding details: ‘, 
    #     {
    #     u'plan_id': u'2c441056-a48a-40d4-931e-616de3bfcb8d’, 
    #     u'bind_resource’: 
    #                             {
    #                               u'app_guid': u'26d8574e-7d90-4aa1-b0d7-b88e8ed2bc51’
    #                             }, 
    #     u'service_id': u'c45dcaa1-6dec-48ce-b6bc-b65cb96f437c’, 
    #     u'app_guid': u'26d8574e-7d90-4aa1-b0d7-b88e8ed2bc51’
    #    }
    # )